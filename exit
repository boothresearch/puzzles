[1mdiff --git a/anagram/anagram.py b/anagram/anagram.py[m
[1mindex 9812eb1..f800912 100644[m
[1m--- a/anagram/anagram.py[m
[1m+++ b/anagram/anagram.py[m
[36m@@ -1,2 +1,11 @@[m
 def find_anagrams(word, candidates):[m
[31m-    pass[m
[32m+[m[32m    cand_list = [][m
[32m+[m[32m    word_set = set(word)[m
[32m+[m[32m    for cand in candidates:[m
[32m+[m[32m        cand_set = set(cand)[m
[32m+[m[32m        if cand_set==word_set and len(word)==len(cand):[m
[32m+[m[32m            cand_list.append(cand)[m
[32m+[m[41m    [m
[32m+[m[32m    return cand_list[m
[32m+[m
[32m+[m[32mprint(find_anagrams('listen',["enlists","google","inlets","banana"]))[m
[1mdiff --git a/leap/leap.py b/leap/leap.py[m
[1mindex 50fd034..dafb9be 100644[m
[1m--- a/leap/leap.py[m
[1m+++ b/leap/leap.py[m
[36m@@ -1,2 +1,19 @@[m
 def leap_year(year):[m
[31m-    pass[m
[32m+[m[32m    if not isinstance(year,int):[m
[32m+[m[32m        raise TypeError("Year entered must be an integer!")[m
[32m+[m[32m    if year%4==0:[m
[32m+[m[32m        if year%100==0:[m
[32m+[m[32m            if year%400==0:[m
[32m+[m[32m                return True[m
[32m+[m[32m            else:[m
[32m+[m[32m                return False[m
[32m+[m[32m        else:[m
[32m+[m[32m            return True[m
[32m+[m
[32m+[m[32myear = input("Please choose the year:")[m
[32m+[m[32mtry:[m
[32m+[m[32m    year = int(year)[m
[32m+[m[32mexcept TypeError:[m
[32m+[m[32m    print("Please input an integer!")[m
[32m+[m
[32m+[m[32mprint(leap_year(year))[m
\ No newline at end of file[m
